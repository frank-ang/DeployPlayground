AWSTemplateFormatVersion: '2010-09-09'

Description: Simple Bastion Host.
  Setup CloudWatch Agent. 
  Setup SSM permissions.

Parameters: 

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID.

  SubnetId:
    Type: String
    Description: Subnet ID placement

  AZ:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: Availability Zone placement

  BastionSecurityGroup:
    Description: Bastion Security group ID
    Type: String

  KeyPair:
    Description: Key Pair Name
    Type: AWS::EC2::KeyPair::KeyName

Mappings:
  # Amazon Linux
  AWSRegion2AMI:
    us-east-1: 
      hvm: ami-0c6b1d09930fac512
    ap-southeast-1:
      hvm: ami-0b5a47f8865280111

Resources:

  BastionHostInstance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - 02_config-amazon-cloudwatch-agent
            - 03_restart_amazon-cloudwatch-agent
            - 01_setupCfnHup
          UpdateEnvironment:
            - 02_config-amazon-cloudwatch-agent
            - 03_restart_amazon-cloudwatch-agent
        # Definition of json configuration of AmazonCloudWatchAgent, you can change the configuration below.
        02_config-amazon-cloudwatch-agent:
          files:
            '/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json':
              content: !Sub |
                {
                  "metrics": {
                    "append_dimensions": {
                      "ImageId": "${!aws:ImageId}",
                      "InstanceId": "${!aws:InstanceId}",
                      "InstanceType": "${!aws:InstanceType}"
                    },
                    "metrics_collected": {
                      "mem": {
                        "measurement": [
                          "mem_used_percent"
                        ]
                      }
                    }
                  }
                }
        # Invoke amazon-cloudwatch-agent-ctl to restart the AmazonCloudWatchAgent.
        03_restart_amazon-cloudwatch-agent:
          commands:
            01_stop_service:
              command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a stop
            02_start_service:
              command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json -s
        # Cfn-hup setting, it is to monitor the change of metadata.
        # When there is change in the contents of json file in the metadata section, cfn-hup will call cfn-init to restart the AmazonCloudWatchAgent.
        01_setupCfnHup:
          files:
             '/etc/cfn/cfn-hup.conf':
               content: !Sub |
                 [main]
                 stack=${AWS::StackId}
                 region=${AWS::Region}
                 interval=1
               mode: '000400'
               owner: root
               group: root
             '/etc/cfn/hooks.d/amazon-cloudwatch-agent-auto-reloader.conf':
               content: !Sub |
                 [cfn-auto-reloader-hook]
                 triggers=post.update
                 path=Resources.BastionHostInstance.Metadata.AWS::CloudFormation::Init.02_config-amazon-cloudwatch-agent
                 action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource BastionHostInstance --region ${AWS::Region} --configsets UpdateEnvironment
                 runas=root
               mode: '000400'
               owner: root
               group: root
             "/lib/systemd/system/cfn-hup.service":
                content: !Sub |
                  [Unit]
                  Description=cfn-hup daemon
                  [Service]
                  Type=simple
                  ExecStart=/opt/aws/bin/cfn-hup
                  Restart=always
                  [Install]
                  WantedBy=multi-user.target
          commands:
            01enable_cfn_hup:
              command: !Sub |
                systemctl enable cfn-hup.service
            02start_cfn_hup:
              command: !Sub |
                systemctl start cfn-hup.service
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: "PT15M"
    Properties:
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
      - !Ref BastionSecurityGroup
      KeyName: !Ref KeyPair
      InstanceType: t3.micro
      AvailabilityZone: !Ref AZ
      ImageId:
        Fn::FindInMap:
        - AWSRegion2AMI
        - Ref: AWS::Region
        - hvm
      Tags:
        - Key: project
          Value: bastion
        - Key: Name
          Value: bastion
      IamInstanceProfile: !Ref BastionIamInstanceProfile
      UserData:
        Fn::Base64: !Sub |
           #!/bin/bash
           # Install useful utilities
           yum install -y nmap-ncat mysql jq
           # Cosmetic, set locale.
           echo 'LANG=en_US.utf-8' > /etc/environment && echo 'LC_ALL=en_US.utf-8' >> /etc/environment
           # Installs AmazonCloudWatchAgent, restart AmazonCloudWatchAgent and signals the result back to CloudFormation.
           rpm -Uvh https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm
           /opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource BastionHostInstance --region ${AWS::Region} --configsets default
           /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource BastionHostInstance --region ${AWS::Region}

  BastionIamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles: 
        - !Ref BastionIamRole

  BastionIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      ManagedPolicyArns: 
        - "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"

Outputs:
  InstanceId:
    Description: InstanceId of the bastion EC2 instance
    Value:
      Ref: BastionHostInstance
  PublicIP:
    Description: Public IP address of the bastion EC2 instance
    Value:
      Fn::GetAtt:
      - BastionHostInstance
      - PublicIp
